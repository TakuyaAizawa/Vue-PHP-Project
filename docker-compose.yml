services:
  nginx:
    build:
      context: ./nginx
    ports:
      - "${NGINX_PORT}:80"
    volumes:
      - ./backend:/var/www/html
      - ./frontend/dist:/var/www/html/public
    depends_on:
      - php
      - frontend-build

  php:
    build:
      context: ./backend
    volumes:
      - ./backend:/var/www/html
    depends_on:
      - mysql
      - frontend-build
    environment:
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - APP_ENV=${APP_ENV}
      - SUPABASE_URL=${SUPABASE_URL}

  mysql:
    image: mysql:8.0
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_CHARSET=${MYSQL_CHARSET}
      - MYSQL_COLLATION=${MYSQL_COLLATION}
    command: --character-set-server=${MYSQL_CHARSET} --collation-server=${MYSQL_COLLATION}
    ports:
      - "${MYSQL_PORT}:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    ports:
      - "${PMA_PORT}:80"
    environment:
      - PMA_HOST=${PMA_HOST}
      - PMA_USER=${PMA_USER}
      - PMA_PASSWORD=${PMA_PASSWORD}
    depends_on:
      - mysql

  frontend-build:
    build:
      context: ./frontend
    restart: "no"
    volumes:
      - ./frontend:/app
      - frontend-node-modules:/app/node_modules
      - ./frontend/dist:/app/dist
    command: sh -c "npm install && npm run build"

volumes:
  frontend-node-modules:
  mysql_data: 